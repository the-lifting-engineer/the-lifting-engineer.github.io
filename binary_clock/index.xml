<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vincent Engineer Projects</title>
    <link>https://vincent.engineer/binary_clock/</link>
    <description>Recent content on Vincent Engineer Projects</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright Â© 2021, Vincent; all rights reserved.</copyright>
    <lastBuildDate>Sun, 29 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://vincent.engineer/binary_clock/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://vincent.engineer/binary_clock/about/</link>
      <pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.engineer/binary_clock/about/</guid>
      <description>What is a Binary Clock: A Binary Clock is a clock that shows the time as a binary value. For example 12:49 will be displayed as 1100 110001 (it should be noted this is seperating hours and minutes as seperate binary values for the purpose of displaying).
Why this project: The Binary Clock is a common engineering project. The reason I choose to tackle this project was due to dynamic nature of the project.</description>
    </item>
    
    <item>
      <title>Binary_Clock_Code_Rev1_0</title>
      <link>https://vincent.engineer/binary_clock/binary_clock_code_rev1_0/</link>
      <pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://vincent.engineer/binary_clock/binary_clock_code_rev1_0/</guid>
      <description>#include &amp;lt;NTPClient.h&amp;gt; #include &amp;lt;ESP8266WiFi.h&amp;gt; #include &amp;lt;WiFiUdp.h&amp;gt;
int latchPin1 = D2; int clockPin1 = D0; int dataPin1 = D1;
int latchPin2 = D5; int clockPin2 = D3; int dataPin2 = D4;
byte data1 = 0; byte data2 = 0; byte dataArray[60];
const char *ssid = &amp;ldquo;totally legit wifi&amp;rdquo;; const char *password = &amp;ldquo;goodlife&amp;rdquo;;
const long utcOffsetInSeconds = -25200;
// Define NTP Client to get time WiFiUDP ntpUDP; NTPClient timeClient(ntpUDP, &amp;ldquo;pool.ntp.org&amp;rdquo;, utcOffsetInSeconds);</description>
    </item>
    
  </channel>
</rss>
